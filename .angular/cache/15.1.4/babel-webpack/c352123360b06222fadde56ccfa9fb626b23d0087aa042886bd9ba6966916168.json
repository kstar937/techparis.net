{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { map } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.getLoggedInName = new EventEmitter();\n  }\n  userregisstration(f_name, l_name, email, password, mobile) {\n    const url = environment.API_EndPoint + 'user_loginregister/register.php';\n    return this.httpClient.post(url, {\n      f_name,\n      l_name,\n      email,\n      password,\n      mobile\n    }).pipe(map(Users => {\n      this.getLoggedInName.emit(true);\n      return Users;\n    }));\n  }\n  userlogin(email, password) {\n    const url = environment.API_EndPoint + 'user_loginregister/login.php';\n    return this.httpClient.post(url, {\n      email,\n      password\n    }).pipe(map(Users => {\n      console.log(Users.f_name);\n      this.setToken(Users.email);\n      //this.getLoggedInName.emit(true);\n      return Users;\n    }));\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n  isLoggedIn() {\n    const usertoken = this.getToken();\n    if (usertoken != null) {\n      return true;\n    }\n    return false;\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAA4B,eAAe;AAChE,SAASC,GAAG,QAAoB,MAAM;AAEtC,SAASC,WAAW,QAAQ,8BAA8B;;;AAI1D,OAAM,MAAOC,UAAU;EAKrBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFpB,oBAAe,GAAsB,IAAIL,YAAY,EAAE;EAElB;EAExCM,iBAAiB,CAACC,MAAW,EAACC,MAAU,EAACC,KAAS,EAACC,QAAY,EAACC,MAAU;IAE/E,MAAMC,GAAG,GAAGV,WAAW,CAACW,YAAY,GAAG,iCAAiC;IACxE,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAMF,GAAG,EACpC;MACEL,MAAM;MAACC,MAAM;MAACC,KAAK;MAACC,QAAQ;MAACC;KAAO,CACrC,CACAI,IAAI,CAACd,GAAG,CAACe,KAAK,IAAG;MAChB,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;MAC/B,OAAOF,KAAK;IACd,CAAC,CAAC,CAAC;EAEL;EAEOG,SAAS,CAACV,KAAS,EAACC,QAAY;IACrC,MAAME,GAAG,GAAGV,WAAW,CAACW,YAAY,GAAG,8BAA8B;IACrE,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAMF,GAAG,EAAE;MAACH,KAAK;MAAEC;IAAQ,CAAC,CAAC,CACvDK,IAAI,CAACd,GAAG,CAACe,KAAK,IAAG;MACjBI,OAAO,CAACC,GAAG,CAACL,KAAK,CAACT,MAAM,CAAC;MACxB,IAAI,CAACe,QAAQ,CAACN,KAAK,CAACP,KAAK,CAAC;MAC1B;MACD,OAAOO,KAAK;IACb,CAAC,CAAC,CAAC;EACL;EAEAM,QAAQ,CAACC,KAAa;IACpBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACtC;EAEAG,QAAQ;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,WAAW;IACTJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAClC;EAEAC,UAAU;IACR,MAAMC,SAAS,GAAG,IAAI,CAACL,QAAQ,EAAE;IACjC,IAAIK,SAAS,IAAG,IAAI,EAAE;MACpB,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;;AAlDW5B,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAA6B,SAAV7B,UAAU;EAAA8B,YAFT;AAAM","names":["EventEmitter","map","environment","ApiService","constructor","httpClient","userregisstration","f_name","l_name","email","password","mobile","url","API_EndPoint","post","pipe","Users","getLoggedInName","emit","userlogin","console","log","setToken","token","localStorage","setItem","getToken","getItem","deleteToken","removeItem","isLoggedIn","usertoken","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\karan\\OneDrive\\Documents\\techparis.net\\src\\app\\api.service.ts"],"sourcesContent":["import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { map, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  redirectUrl !: string;\n  @Output() getLoggedInName: EventEmitter<any> = new EventEmitter();\n\n  constructor(private httpClient: HttpClient,) { }\n\n  public userregisstration(f_name: any,l_name:any,email:any,password:any,mobile:any,) \n                          {\n    const url = environment.API_EndPoint + 'user_loginregister/register.php';\n    return this.httpClient.post<any>(url,\n    {\n      f_name,l_name,email,password,mobile}\n    )\n    .pipe(map(Users => {\n      this.getLoggedInName.emit(true);\n      return Users;\n    }));\n\n  }\n\n  public userlogin(email:any,password:any) {\n    const url = environment.API_EndPoint + 'user_loginregister/login.php';\n    return this.httpClient.post<any>(url, {email, password})\n    .pipe(map(Users => {\n     console.log(Users.f_name)\n      this.setToken(Users.email);\n      //this.getLoggedInName.emit(true);\n     return Users;\n    }));\n  }\n\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n\n  isLoggedIn() {\n    const usertoken = this.getToken();\n    if (usertoken!= null) {\n      return true\n    }\n    return false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}